{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ktg1adf"
		},
		"amlblob_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'amlblob'"
		},
		"ktg1blob_servicePrincipalKey": {
			"type": "secureString",
			"metadata": "Secure string for 'servicePrincipalKey' of 'ktg1blob'"
		},
		"ktg1blob_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://ktg1blob.dfs.core.windows.net"
		},
		"ktg1blob_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "0ae0ab9e-ed14-495c-b44c-37636d04e7c5"
		},
		"ktg1blob_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "9b452daa-e8f2-4aea-a757-79ccc2c0882e"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/amlblob')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "amlblob",
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('amlblob_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ktg1blob')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "ktg1blob",
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ktg1blob_properties_typeProperties_url')]",
					"tenant": "[parameters('ktg1blob_properties_typeProperties_tenant')]",
					"servicePrincipalId": "[parameters('ktg1blob_properties_typeProperties_servicePrincipalId')]",
					"servicePrincipalKey": {
						"type": "SecureString",
						"value": "[parameters('ktg1blob_servicePrincipalKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/airportCount')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ktg1blob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "temporary",
						"fileSystem": "adf"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ktg1blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/airportsCSVLake')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ktg1blob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "airports.csv",
						"folderPath": "flights",
						"fileSystem": "adf"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "IATA_CODE",
						"type": "String"
					},
					{
						"name": "AIRPORT",
						"type": "String"
					},
					{
						"name": "CITY",
						"type": "String"
					},
					{
						"name": "STATE",
						"type": "String"
					},
					{
						"name": "COUNTRY",
						"type": "String"
					},
					{
						"name": "LATITUDE",
						"type": "String"
					},
					{
						"name": "LONGITUDE",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ktg1blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/junkFolder')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ktg1blob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "temp",
						"fileSystem": "adf"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ktg1blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/csv2parquet')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "csv2csvblob",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "path",
										"value": "$$FILEPATH"
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 2
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"parallelCopies": 2,
							"enableSkipIncompatibleRow": false,
							"validateDataConsistency": true,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "IATA_CODE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "IATA_CODE"
										}
									},
									{
										"source": {
											"name": "AIRPORT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AIRPORT"
										}
									},
									{
										"source": {
											"name": "CITY",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CITY"
										}
									},
									{
										"source": {
											"name": "STATE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "STATE"
										}
									},
									{
										"source": {
											"name": "COUNTRY",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "COUNTRY"
										}
									},
									{
										"source": {
											"name": "LATITUDE",
											"type": "Double",
											"physicalType": "String"
										},
										"sink": {
											"name": "LATITUDE"
										}
									},
									{
										"source": {
											"name": "LONGITUDE",
											"type": "Double",
											"physicalType": "String"
										},
										"sink": {
											"name": "LONGITUDE"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "airportsCSVLake",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "junkFolder",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"concurrency": 2,
				"annotations": [],
				"lastPublishTime": "2020-08-26T14:41:26Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/airportsCSVLake')]",
				"[concat(variables('factoryId'), '/datasets/junkFolder')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/airports')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "airportsCSVLake",
								"type": "DatasetReference"
							},
							"name": "airports"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "airportCount",
								"type": "DatasetReference"
							},
							"name": "AirportCount"
						}
					],
					"transformations": [
						{
							"name": "usa"
						},
						{
							"name": "stateAirports"
						},
						{
							"name": "sortedAirports"
						}
					],
					"script": "source(output(\n\t\tIATA_CODE as string,\n\t\tAIRPORT as string,\n\t\tCITY as string,\n\t\tSTATE as string,\n\t\tCOUNTRY as string,\n\t\tLATITUDE as string,\n\t\tLONGITUDE as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: true) ~> airports\nairports filter(rlike(COUNTRY, 'USA')) ~> usa\nusa aggregate(groupBy(STATE),\n\tAIRPORT = count(AIRPORT)) ~> stateAirports\nstateAirports sort(desc(AIRPORT, false)) ~> sortedAirports\nsortedAirports sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['airportCount.csv'],\n\ttruncate: true,\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> AirportCount"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/airportsCSVLake')]",
				"[concat(variables('factoryId'), '/datasets/airportCount')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/airportsCounter')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "airportsFlow",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "airports",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"airports": {},
									"AirportCount": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/airports')]"
			]
		}
	]
}